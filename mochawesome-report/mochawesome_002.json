{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-15T18:30:04.567Z",
    "end": "2023-06-15T18:30:06.905Z",
    "duration": 2338,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bef0d5ee-4779-4865-89d3-5cc2edb940b7",
      "title": "",
      "fullFile": "cypress/integration/exercicio-api.spec.js",
      "file": "cypress/integration/exercicio-api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "48e35193-43c7-409a-b148-203e1b2bcb70",
          "title": "Testes da Funcionalidade Usuários",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de usuários",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar contrato de usuários",
              "timedOut": null,
              "duration": 910,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  return _usuario.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "8124be23-49d1-4c45-bee6-3809730d1b49",
              "parentUUID": "48e35193-43c7-409a-b148-203e1b2bcb70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve listar usuários cadastrados",
              "fullTitle": "Testes da Funcionalidade Usuários Deve listar usuários cadastrados",
              "timedOut": null,
              "duration": 218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'usuarios'\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('usuarios');\n});",
              "err": {},
              "uuid": "2408cd99-ca6c-4d52-a9db-775c8b19058d",
              "parentUUID": "48e35193-43c7-409a-b148-203e1b2bcb70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve cadastrar um usuário com sucesso",
              "fullTitle": "Testes da Funcionalidade Usuários Deve cadastrar um usuário com sucesso",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = `mario${Math.floor(Math.random() * 100000)}@gmail.com`;\ncy.request({\n  method: 'POST',\n  url: 'usuarios',\n  body: {\n    \"nome\": \"mario\",\n    \"email\": email,\n    \"password\": \"novo\",\n    \"administrador\": \"true\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "71521dfe-e77b-4eee-b42e-ebf747ca4cec",
              "parentUUID": "48e35193-43c7-409a-b148-203e1b2bcb70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar um usuário com email inválido",
              "fullTitle": "Testes da Funcionalidade Usuários Deve validar um usuário com email inválido",
              "timedOut": null,
              "duration": 206,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'usuarios',\n  failOnStatusCode: false,\n  body: {\n    \"nome\": \"marioo\",\n    \"email\": \"mario@gmail.com\",\n    \"password\": \"novo\",\n    \"administrador\": \"true\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Este email já está sendo usado');\n});",
              "err": {},
              "uuid": "9656dd15-e250-4dcd-97d8-2b09c7014b8f",
              "parentUUID": "48e35193-43c7-409a-b148-203e1b2bcb70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve editar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 394,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('usuarios').then(response => {\n  let id = response.body.usuarios[3]._id;\n  cy.request({\n    method: 'PUT',\n    url: `usuarios/${id}`,\n    body: {\n      \"nome\": \"tal\",\n      \"email\": \"albertinhosss@gmail.com\",\n      \"password\": \"159\",\n      \"administrador\": \"true\"\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "648c2f9d-46f0-49d4-bab3-4fcf7de00134",
              "parentUUID": "48e35193-43c7-409a-b148-203e1b2bcb70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um usuário previamente cadastrado",
              "fullTitle": "Testes da Funcionalidade Usuários Deve deletar um usuário previamente cadastrado",
              "timedOut": null,
              "duration": 372,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarUsuario(\"usuario novo\", \"emailaqui@gmail.com\", \"novo\", \"false\").then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `usuarios/${id}`\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "8ff8ffd6-5466-4108-960e-b7c0b4ab68fa",
              "parentUUID": "48e35193-43c7-409a-b148-203e1b2bcb70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8124be23-49d1-4c45-bee6-3809730d1b49",
            "2408cd99-ca6c-4d52-a9db-775c8b19058d",
            "71521dfe-e77b-4eee-b42e-ebf747ca4cec",
            "9656dd15-e250-4dcd-97d8-2b09c7014b8f",
            "648c2f9d-46f0-49d4-bab3-4fcf7de00134",
            "8ff8ffd6-5466-4108-960e-b7c0b4ab68fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2305,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}